const logger = require('@blackbaud/skyux-logger');
const fs = require('fs-extra');
const path = require('path');

const jsonUtils = require('./json-utils');
const runNgCommand = require('./run-ng-command');

/**
 * Installs the ESLint Angular builder.
 * @param workspacePath The path that contains the angular.json file.
 * @param projectPath The path that contains the SPA/library source code. Sometimes Angular places
 * the project's code at the root, and sometimes it's located in a specific folder in the '/projects' directory.
 */
async function installEsLint(workspacePath, projectPath, projectName) {
  logger.info(`Installing ESLint ...`);

  const result = runNgCommand(
    'add',
    ['@angular-eslint/schematics', '--skip-confirmation'],
    {
      stdio: 'inherit',
      cwd: workspacePath,
    }
  );

  // Angular's error messages do not bubble up to parent processes,
  // so we have to rely on the status code.
  if (result.status === 1) {
    throw new Error(`Failed to add ESLint to project.`);
  }

  logger.info('Updating ESLint configuration...');

  const workspaceEslintConfigPath = path.join(workspacePath, '.eslintrc.json');
  const projectEslintConfigPath = path.join(projectPath, '.eslintrc.json');

  // Workspace and project paths are the same for applications.
  const isApplication = workspaceEslintConfigPath === projectEslintConfigPath;
  if (isApplication) {
    logger.info('ESLint configuration updated for root application.');
    return;
  }

  // If multiple projects are defined in angular.json, the ESLint schematic
  // will not update the default project's "lint" target. To fix this, we need
  // to run their generate schematic to add the target explicitly.
  if (!fs.existsSync(projectEslintConfigPath)) {
    runNgCommand(
      'generate',
      ['@angular-eslint/schematics:add-eslint-to-project', projectName],
      {
        stdio: 'inherit',
        cwd: workspacePath,
      }
    );
  }

  // Until @angular-eslint/schematics fixes implementations for empty workspaces,
  // we need to generate the root .eslintrc.json file manually for library projects.
  // Issue: https://github.com/angular-eslint/angular-eslint/issues/462
  /* istanbul ignore else */
  if (!fs.existsSync(workspaceEslintConfigPath)) {
    // The contents of this file are generated by the @angular-eslint/schematics library,
    // see: https://github.com/angular-eslint/angular-eslint/blob/master/packages/schematics/src/utils.ts#L252
    await jsonUtils.writeJson(workspaceEslintConfigPath, {
      root: true,
      ignorePatterns: ['projects/**/*'],
      overrides: [
        {
          files: ['*.ts'],
          parserOptions: {
            project: ['tsconfig.json'],
            createDefaultProgram: true,
          },
          extends: [
            'plugin:@angular-eslint/recommended',
            'plugin:@angular-eslint/template/process-inline-templates',
          ],
        },
        {
          files: ['*.html'],
          extends: ['plugin:@angular-eslint/template/recommended'],
          rules: {},
        },
      ],
    });
  }

  logger.info('ESLint configuration updated for library.');
}

module.exports = installEsLint;
